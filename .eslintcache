[{"/home/ubuntu/_devlab/esignature/src/reportWebVitals.js":"1","/home/ubuntu/_devlab/esignature/src/index.jsx":"2","/home/ubuntu/_devlab/esignature/src/App.jsx":"3"},{"size":362,"mtime":1609444813486,"results":"4","hashOfConfig":"5"},{"size":500,"mtime":1609446423250,"results":"6","hashOfConfig":"5"},{"size":555,"mtime":1609446493943,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"1hfpgjb",{"filePath":"12","messages":"13","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},"/home/ubuntu/_devlab/esignature/src/reportWebVitals.js",["16","17","18"],"const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",["19","20","21","22","23","24"],"/home/ubuntu/_devlab/esignature/src/index.jsx",["25"],"/home/ubuntu/_devlab/esignature/src/App.jsx",["26","27"],{"ruleId":"28","severity":2,"message":"29","line":1,"column":25,"nodeType":"30","messageId":"31","endLine":1,"endColumn":36,"fix":"32"},{"ruleId":"33","severity":2,"message":"34","line":3,"column":32,"nodeType":"35","messageId":"36","endLine":3,"endColumn":33,"fix":"37"},{"ruleId":"33","severity":2,"message":"38","line":3,"column":74,"nodeType":"35","messageId":"39","endLine":3,"endColumn":75,"fix":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":2,"message":"54","line":11,"column":34,"nodeType":"55","messageId":"56","endLine":12,"endColumn":1,"fix":"57"},{"ruleId":"58","severity":2,"message":"59","line":11,"column":16,"nodeType":"60","endLine":11,"endColumn":39,"fix":"61"},{"ruleId":"58","severity":2,"message":"62","line":11,"column":39,"nodeType":"63","endLine":12,"endColumn":9,"fix":"64"},"arrow-parens","Expected parentheses around arrow function argument.","ArrowFunctionExpression","expectedParens",{"range":"65","text":"66"},"object-curly-newline","Expected a line break after this opening brace.","ObjectPattern","expectedLinebreakAfterOpeningBrace",{"range":"67","text":"68"},"Expected a line break before this closing brace.","expectedLinebreakBeforeClosingBrace",{"range":"69","text":"68"},"lines-around-directive",["70"],"no-spaced-func",["71"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"comma-dangle","Missing trailing comma.","CallExpression","missing",{"range":"72","text":"73"},"react/jsx-one-expression-per-line","`code` must be placed on a new line","JSXElement",{"range":"74","text":"75"},"` and save to reload.        ` must be placed on a new line","Literal",{"range":"76","text":"77"},[24,35],"(onPerfEntry)",[129,129],"\n",[170,170],"padding-line-between-statements","func-call-spacing",[264,264],",",[257,280],"\n{' '}\n<code>src/App.js</code>",[280,309],"\n{' '}\nand save to reload.\n"]